<template>
    <div>
        <scroller class="scroll">
            <div class="item-text">
                <text class="date">Jun 8, 2016</text>
                <text class="text-title">{{title}}</text>
                <text class="text-author">作者／{{author}}</text>
                <div class="div-tab">
                    <text class="text-tab" style="background-color:#66ddff;" if="item.type==1" repeat="{{item in tabList}}">tab:{{item.tab}}</text>
                    <text class="text-tab" style="background-color:#ffdd66;" if="item.type==2" repeat="{{item in tabList}}">tab:{{item.tab}}</text>
                    <text class="text-tab" style="background-color:#dd66ff;" if="item.type==3" repeat="{{item in tabList}}">tab:{{item.tab}}</text>
                    <text class="text-tab" style="background-color:#99cc00;" if="item.type==4" repeat="{{item in tabList}}">tab:{{item.tab}}</text>
                </div>
                <text class="text-content">{{content}}</text>
            </div>
        </scroller>
    </div>

</template>

<style>
    .item-text {
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .text-title {
        color: black;
        font-size: 36px;
        margin-top: 20px;
        font-weight: bold;
        /*width:700px;*/
    }

    .text-author {
        color: black;
        font-size: 24px;
        margin-top: 10px;

    }

    .date {
        color: #7a7a7a;
        margin-top: 30px;
    }

    .text-more {
        color: #29a7e2;
        margin-top: 19px;
    }

    .text-content {
    	flex: 1;
        margin-top: 28px;
        color: #333;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
    }
    .text-tab{
        padding-left: 10;
        padding-right: 10;
        padding-top: 5;
        padding-bottom: 6;
        margin-left: 10;
        margin-right: 10;
        /*background-color: #66ddff;*/
        color: #666;
        font-size: 22;
        text-align: center;
    }
    .div-tab{
        margin-top: 20;
        flex-direction: row;
        align-items: flex-start;
    }
</style>

<script>
    require('weex-components');
    var modal = require('@weex-module/modal');
    var navigator = require('@weex-module/navigator');
    var apis = require('../common/api');
    module.exports = {
        data: {
            content: '',
            authorImage: '',
            guideWord: '',
            author: '',
            title: '',
            time:'',
            tabList:[
                {'type':1,'tab':'有通知'},
                {'type':2,'tab':'有消息'},
                {'type':3,'tab':'放假了'},
                {'type':4,'tab':'嗨皮了'},
            ],
            // tabList:['有通知','有消息','放假了','嗨皮了'],
        },
        created: function () {
            var self = this;
            // modal.toast({'message':'啦啦啦','doation':1});
            var bundleUrl = this.$getConfig().bundleUrl;
            // modal.toast({'message':bundleUrl,'doation':1});
            var contentId = self.getParameterByName('id', bundleUrl);
            // modal.toast({'message':contentId,'doation':1});
            if (contentId.lastIndexOf('?') != -1) {
                modal.toast({'message':'啦啦啦','doation':1});
                contentId = contentId.substr(0, contentId.lastIndexOf('?'));
            }
            modal.toast({'message':'啦啦啦'+contentId,'doation':1});
            //获取参数
           // modal.toast({'message': 'hide me!' + contentId, 'duration': 1});
            //请求数据
            apis.getSerialContent(contentId, function (ret) {

//                self.content = ret.data.hp_content.replace(/\<br\>/g, '');
                self.content = ret.data.content;
                self.authorImage = ret.data.author.web_url;
                self.guideWord = ret.data.excerpt;
                self.author = ret.data.author.user_name;
                self.title = ret.data.title;
                modal.toast({'message':self.title,'doation':1});
                
                require('@weex-module/myModule').printLog({ret});

            });

            this.$on('onbackclick', function (e) {
                var params = {
                    'animated': 'true'
                };
                navigator.pop(params, function (e) {
                    //callback
                });
            });
        },
        methods: {
            getParameterByName: function (name, url) {
                name = name.replace(/[\[\]]/g, "\\$&");
                var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                        results = regex.exec(url);

                modal.toast({'message':results,'doation':1});
                if (!results) return null;
                if (!results[2]) return '';
                return decodeURIComponent(results[2].replace(/\+/g, " "));
            },
        }
    }
</script>